// Copyright 2013-2019 TomTom International BV. All rights reserved.

syntax = "proto3";

package openlr_services;

service MapAgent {
	rpc GetNearbyEdges (NearbyEdgesRequest) returns (NearbyEdgesResponse);
	rpc GetNextEdges (NextEdgesRequest) returns (EdgeSet);
}

service Decoder {
	rpc DecodeBinary (stream BinaryDecodeRequest) returns (stream BinaryDecodeResponse);
}

message LogMessage {
  LoggingLevel level=1;
  string msg=2;
}

message OffsetRange {
  uint32 lb=1;
  uint32 ub=2;
}

message BinaryDecodeResponse {
  uint64 id = 1;
  uint64 elapsed_secs = 2;
  uint32 elapsed_nanosecs = 3;
  repeated LogMessage log = 4;
  oneof decoding_result {
    DecodeError decodeError = 5;
    LineLocation lineLocation = 6;
    PointAlongLineLocation pointAlongLineLocation = 7;
  }
}

enum LoggingLevel {
  TRACE=0;
  DEBUG=1;
  INFO=2;
  WARN=3;
  ERROR=4;
  FATAL=5;
}

enum Orientation {
  NO_OR_UNKNOWN = 0;
  FIRST_TO_SECOND = 1;
  SECOND_TO_FIRST = 2;
  BOTH_DIRECTIONS = 3;
}

enum SideOfRoad {
  ON_OR_NOT_APPLICABLE = 0;
  RIGHT_SIDE = 1;
  LEFT_SIDE = 2;
  BOTH_SIDES = 3;
}

message DecodeError {
  string reason=1;
}

message LineLocation {
  repeated Edge edge=1;
  OffsetRange pos_off = 2;
  OffsetRange neg_off = 3;
}

message PointAlongLineLocation {
  repeated Edge edge=1;
  OffsetRange pos_off = 2;
  SideOfRoad side_of_road = 3;
  Orientation orientation = 4;
}


message BinaryDecodeRequest {
  uint64 id = 1;
  string code = 2;
  string decoding_parameter_set = 3;
  string agent_protocol = 4;
  string agent_name = 5;
  LoggingLevel logging_level = 6;
}

message Coordinate {
	double longitude = 1;
	double latitude = 2;
}

message Edge {

   enum FOW {
      UNDEFINED = 0;
      MOTORWAY = 1;
      MULTIPLECARRIAGEWAY = 2;
      SINGLECARRIAGEWAY = 3;
      ROUNDABOUT = 4;
      TRAFFICSQUARE = 5;
      SLIPROAD = 6;
      OTHER = 7;
  }
  enum FRC {
      FRC0 = 0;
      FRC1 = 1;
      FRC2 = 2;
      FRC3 = 3;
      FRC4 = 4;
      FRC5 = 5;
      FRC6 = 6;
      FRC7 = 7;
  }

	int64 id = 1;
	string meta = 2;
  FOW fow = 3;
  FRC frc = 4;
	uint32 len = 5;
	repeated Coordinate coords = 6;
}
  
message EdgeSet {
  repeated Edge edges = 1;
}

message NearbyEdgesRequest {
  repeated Coordinate points = 1;
  uint32 radius = 2;
}

message NearbyEdgesResponse {
  repeated EdgeSet edge_sets = 1;
}

message NextEdgesRequest {
  int64 id = 1;
  string meta = 2;
}